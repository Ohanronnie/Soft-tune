let express = require('express');
let app = express();
let bodyparser = require('body-parser');
let parser = bodyparser.urlencoded({extended: false});
let cookieparser = require('cookie-parser');
app.use(cookieparser());
app.use('/public',express.static('public'));
app.use(bodyparser.urlencoded({extended: false}));
app.set('view engine','ejs');
let formidable = require('formidable');
let url = "mongodb+srv://ohanronnieserver:2RNqRolJvJeaREiq@cluster0.3t6f6ty.mongodb.net/?retryWrites=true&w=majority";
var mongo = require('mongodb').MongoClient;
let decrypt = text => {
   return atob(atob(atob(text)))
}
//show the file
app.get('/upload.html',function(req,res){
  res.render('project/home/upload');
});
//control the form
app.post('/upload',function(req,res){
  let form = new formidable.IncomingForm();
  form.parse(req,function(err,fields,files){
   let music = fields.music;
   let cover = fields.cover;
   let name = fields.name;
   let lyrics = fields.lyrics;
   let artist = fields.artist;
   let description = fields.description;
   let array = [music,cover,name,lyrics,artist,description];
   console.log(array);
/*   async function connect(){
     try{
     let result = db.pool.query('INSERT INTO music(music,cover,name,artist,lyrics,description) VALUES ?',[music,cover,name,artist,lyrics,description])
     console.log(result)
    }
    catch(err){
    console.log(err)
    }
  }
  connect()*/
 });
});
app.get('/login',function(req,res){
  res.render('project/home/index',{
  message: ''
}) 
});
app.post('/index',function(req,res){
  let form = new formidable.IncomingForm();
  form.parse(req,function(err,fields,files){
   let email = fields.mail;
   let password = fields.password;
     mongo.connect(url,function(err,db){
        if(err) throw err;
        let dbo = db.db('mydb');
        let query = {mail: email, password: password} 
        dbo.collection('userdata').find(query).toArray(function(err,result){
        if(err) throw err;
        console.log(result);
        if(result.length == 0){
        res.render('project/home/index',{
          message: 'Incorrect Password' 
       });
       db.close()
      }
      else{
        let data = {
        user: btoa(btoa(btoa(email))),
        pass: btoa(btoa(btoa(password)))
        };
        try{
        res.cookie('Login_data',data);
        }
        catch(err){
         throw err; 
        }/*,{
        maxAge: 1000 * 60 * 60 * 24 * 3,
        // expires works the same as the maxAge
        secure: true,
        httpOnly: true,
        sameSite: 'lax'
        });*/
        let logindata = btoa('Login-data');
        console.log(req.cookies,logindata);
        console.log(req.cookies.Login_data)
        res.render('project/files/index')
        db.close(); 
  };
   });
 });
  });
});
app.get('/index',function(req,res){
  if(req.cookies.Login_data == undefined || req.cookies.Login_data == "undefined"){
    res.render('project/home/index',{
    message: 'You must login to continue'
 });
 }
 else{
   let mail = decrypt(req.cookies.Login_data.user);
   let pass = decrypt(req.cookies.Login_data.pass);
   mongo.connect(url,function(err,db){
     if(err) throw err;
     let dbo = db.db('mydb');
     let query = {mail: mail, password: pass}
     console.log(query);
     dbo.collection('userdata').find(query).toArray(function(err,result){
       console.log(result)
       res.render('project/files/index',{
       user: result[0].username
    });
    db.close();
  });
  });
 }
});
app.get('/signup',function(req,res){
  res.render('project/home/signup',{
  message: ''
});
});
app.post('/signin',function(req,res){
  let form = new formidable.IncomingForm();
  form.parse(req,function(err,fields,files){
    let username = fields.name;
    let password = fields.pass;
    let mail = fields.mail;
   mongo.connect(url,function(err,db){
    let dbo = db.db('mydb');
    dbo.collection('userdata').find({username: username}).toArray(function(err,result){
      console.log(result)
   });
   dbo.collection('userdata').insertOne({username: username,password: password,mail: mail},function(err,result){
     if(err) throw err;
     console.log([username,password,mail]);
     console.log('ADDED TO DATABASE');
     res.render('project/home/index',{
     message: ''
     })
     db.close()
  });
 });
 });
});
app.get('/check',function(req,res){
    if(req.query.data == undefined){
       data = ''
    }
    else{
       data = req.query.data
    }
    mongo.connect(url,function(err,db){
      if(err) throw err;
      console.log('Step 1');
      let dbo = db.db('mydb');
      dbo.collection('userdata').find({username: data}).toArray(function(err,result){
      if(err) throw err;
      if(data.length < 4){
      res.send(' ');
      db.close()
    }
    else{
      res.send(result);
      console.log(result)
      db.close()
    };
  });
});
});
app.get('/mail',function(req,res){
    if(req.query.mail == undefined){
       dat = ''
    }
    else{
       dat = req.query.mail
    }
      mongo.connect(url,function(err,db){
      if(err) throw err;
      console.log('Step 1');
      let dbo = db.db('mydb');
      dbo.collection('userdata').find({mail: dat}).toArray(function(err,result){
      if(err) throw err;
    if(dat.indexOf('@') == -1 || dat.indexOf('.') == -1){ 
     res.send(' ');
     db.close()
    }
    else{
     res.send(result);
     console.log(result)
     db.close()
    }
  });
});
});
app.listen(8080,() => {	
console.log('Server is active at port 8080');
})
